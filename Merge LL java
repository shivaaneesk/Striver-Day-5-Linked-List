/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        // Create a dummy node to start the merged list
        ListNode res = new ListNode(); 
        ListNode temp = res; 
        
        // Iterate through both lists until one is exhausted
        while(list1 != null && list2 != null) {
            if(list1.val < list2.val) {
                res.next = list1;
                list1 = list1.next;
                res = res.next;  
            } else {
                res.next = list2;  
                list2 = list2.next; 
                res = res.next; 
            }
        }
        
        // Attach the remaining nodes from list1 if any
        while(list1 != null) {
            res.next = list1; 
            res = res.next; 
            list1 = list1.next; 
        }
        
        // Attach the remaining nodes from list2 if any
        while(list2 != null) {
            res.next = list2; 
            res = res.next; 
            list2 = list2.next; 
        }
        
        // Return the merged list, starting from the node after the dummy node
        return temp.next;
    }
}
